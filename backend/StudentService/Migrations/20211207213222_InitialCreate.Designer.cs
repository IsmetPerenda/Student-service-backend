// <auto-generated />
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace StudentService.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211207213222_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KursStudent", b =>
                {
                    b.Property<int>("KurseviKursId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("KurseviKursId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("KursStudent");
                });

            modelBuilder.Entity("StudentService.Entities.Kurs", b =>
                {
                    b.Property<int>("KursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivKursa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KursId");

                    b.ToTable("Kursevi");

                    b.HasData(
                        new
                        {
                            KursId = 1,
                            NazivKursa = "Matematika"
                        },
                        new
                        {
                            KursId = 2,
                            NazivKursa = "Fizika"
                        },
                        new
                        {
                            KursId = 3,
                            NazivKursa = "Hemija"
                        },
                        new
                        {
                            KursId = 4,
                            NazivKursa = "Programiranje"
                        },
                        new
                        {
                            KursId = 5,
                            NazivKursa = "Programiranje 2"
                        });
                });

            modelBuilder.Entity("StudentService.Entities.KurseviStudenta", b =>
                {
                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<string>("NazivKursa")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("KurseviStudenta");
                });

            modelBuilder.Entity("StudentService.Entities.StatusStudent", b =>
                {
                    b.Property<int>("StatusStudentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NazivStatusa")
                        .HasColumnType("int");

                    b.HasKey("StatusStudentaId");

                    b.ToTable("StatusStudents");

                    b.HasData(
                        new
                        {
                            StatusStudentaId = 1,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 2,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 3,
                            NazivStatusa = 1
                        },
                        new
                        {
                            StatusStudentaId = 4,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 5,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 6,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 7,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 8,
                            NazivStatusa = 1
                        },
                        new
                        {
                            StatusStudentaId = 9,
                            NazivStatusa = 1
                        },
                        new
                        {
                            StatusStudentaId = 10,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 11,
                            NazivStatusa = 0
                        },
                        new
                        {
                            StatusStudentaId = 12,
                            NazivStatusa = 1
                        },
                        new
                        {
                            StatusStudentaId = 13,
                            NazivStatusa = 1
                        },
                        new
                        {
                            StatusStudentaId = 14,
                            NazivStatusa = 0
                        });
                });

            modelBuilder.Entity("StudentService.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojIndeksa")
                        .HasColumnType("int");

                    b.Property<int>("Godina")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            BrojIndeksa = 111,
                            Godina = 1,
                            Ime = "Chris",
                            Prezime = "Hemsworth"
                        },
                        new
                        {
                            StudentId = 2,
                            BrojIndeksa = 122,
                            Godina = 2,
                            Ime = "Natalie",
                            Prezime = "Portman"
                        },
                        new
                        {
                            StudentId = 3,
                            BrojIndeksa = 133,
                            Godina = 3,
                            Ime = "Brianna",
                            Prezime = "Wong"
                        },
                        new
                        {
                            StudentId = 4,
                            BrojIndeksa = 144,
                            Godina = 1,
                            Ime = "James ",
                            Prezime = "Hines"
                        },
                        new
                        {
                            StudentId = 5,
                            BrojIndeksa = 155,
                            Godina = 2,
                            Ime = "Leon ",
                            Prezime = "Moran"
                        },
                        new
                        {
                            StudentId = 6,
                            BrojIndeksa = 166,
                            Godina = 3,
                            Ime = "Simpson ",
                            Prezime = "Evans"
                        },
                        new
                        {
                            StudentId = 7,
                            BrojIndeksa = 177,
                            Godina = 1,
                            Ime = "Mccullough ",
                            Prezime = "Curry"
                        },
                        new
                        {
                            StudentId = 8,
                            BrojIndeksa = 188,
                            Godina = 2,
                            Ime = "Angelia ",
                            Prezime = "Ruiz"
                        },
                        new
                        {
                            StudentId = 9,
                            BrojIndeksa = 199,
                            Godina = 3,
                            Ime = "Hinton ",
                            Prezime = "Love"
                        },
                        new
                        {
                            StudentId = 10,
                            BrojIndeksa = 211,
                            Godina = 1,
                            Ime = "Adrienne ",
                            Prezime = "Logan"
                        },
                        new
                        {
                            StudentId = 11,
                            BrojIndeksa = 222,
                            Godina = 2,
                            Ime = "Broderick ",
                            Prezime = "Bentley"
                        },
                        new
                        {
                            StudentId = 12,
                            BrojIndeksa = 233,
                            Godina = 3,
                            Ime = "Hiram ",
                            Prezime = "Garcia"
                        },
                        new
                        {
                            StudentId = 13,
                            BrojIndeksa = 244,
                            Godina = 1,
                            Ime = "Deshawn ",
                            Prezime = "Cummings"
                        },
                        new
                        {
                            StudentId = 14,
                            BrojIndeksa = 255,
                            Godina = 2,
                            Ime = "Normand ",
                            Prezime = "Hughes"
                        });
                });

            modelBuilder.Entity("StudentService.Entities.StudentiNaKursu", b =>
                {
                    b.Property<int>("BrojIndeksa")
                        .HasColumnType("int");

                    b.Property<int>("Godina")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.ToTable("StudentiNaKursu");
                });

            modelBuilder.Entity("StudentService.Entities.StudentsInfoReport", b =>
                {
                    b.Property<int>("BrojIndeksa")
                        .HasColumnType("int");

                    b.Property<int>("Godina")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NazivStatusa")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusStudentaId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.ToTable("StudentsInfoReport");
                });

            modelBuilder.Entity("KursStudent", b =>
                {
                    b.HasOne("StudentService.Entities.Kurs", null)
                        .WithMany()
                        .HasForeignKey("KurseviKursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentService.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
